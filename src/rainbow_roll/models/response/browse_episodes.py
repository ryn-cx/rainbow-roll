# generated by datamodel-codegen:
#   filename:  <stdin>

from __future__ import annotations

from typing import Any

from pydantic import BaseModel, ConfigDict


class AdBreak(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    offset_ms: int
    type: str


class ExtendedMaturityRating(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    level: str
    rating: str
    system: str


class Version(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    audio_locale: str
    guid: str
    is_premium_only: bool
    media_guid: str
    original: bool
    roles: list[str]
    season_guid: str
    variant: str


class Livestream(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    end_date: str
    episode_end_date: str
    episode_start_date: str
    start_date: str


class EpisodeMetadata(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    ad_breaks: list[AdBreak]
    audio_locale: str
    availability_ends: str
    availability_notes: str
    availability_starts: str
    availability_status: str
    available_date: None
    available_offline: bool
    closed_captions_available: bool
    content_descriptors: list[str] | None = None
    duration_ms: int
    eligible_region: str
    episode: str
    episode_air_date: str
    episode_number: int
    extended_maturity_rating: ExtendedMaturityRating
    free_available_date: str
    identifier: str
    is_clip: bool
    is_dubbed: bool
    is_mature: bool
    is_premium_only: bool
    is_subbed: bool
    mature_blocked: bool
    maturity_ratings: list[str]
    premium_available_date: str
    premium_date: None
    roles: list[str]
    season_display_number: str
    season_id: str
    season_number: int
    season_sequence_number: int
    season_slug_title: str
    season_title: str
    sequence_number: int
    series_id: str
    series_slug_title: str
    series_title: str
    subtitle_locales: list[str]
    tenant_categories: list[str] | None = None
    upload_date: str
    versions: list[Version] | None = None
    livestream: Livestream | None = None


class ThumbnailItem(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    height: int
    source: str
    type: str
    width: int


class Images(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    thumbnail: list[list[ThumbnailItem]]


class Datum(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    slug: str
    episode_metadata: EpisodeMetadata
    promo_description: str
    new: bool
    channel_id: str
    promo_title: str
    linked_resource_key: str
    images: Images
    last_public: str
    slug_title: str
    external_id: str
    description: str
    title: str
    id: str
    type: str


class ModelItem(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    total: int
    data: list[Datum]
    meta: dict[str, Any]
